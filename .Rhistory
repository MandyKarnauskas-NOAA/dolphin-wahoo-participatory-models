m1$rel
m1$rel[which(m1$rel==0)]
m1$rel[which(m1$rel==0)] <- NA
m1
# Step 7. Specify positive and negaitve relationships
rm(list=ls())
d <- read.table("all_terms_edited.csv", header=T, sep=",", stringsAsFactors = F)
sites <- c("Beaufort", "Wanchese", "VirginiaBeach")
for (loc in sites)  {
m <- read.delim(paste0(loc, "_relationships_edited.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
m1 <- m
for (j in 1: nrow(m1))  {
b1 <- which(d$term == m$influences[j])
b2 <- which(d$term == m$isInfluenced[j])
if (length(b1) == 1) {  m1$influences[j]   <- d$allnewterms[b1]  }
if (length(b2) == 1) {  m1$isInfluenced[j] <- d$allnewterms[b2]  }
}
m1$rel[which(m1$rel==0)] <- NA
write.table(m1, file=paste0(loc, "_relationships_newterm.csv"), append=F, quote=F, row.names=F, col.names=T, sep=",")
}
rm(list=ls())
d <- read.table("all_terms_edited.csv", header=T, sep=",", stringsAsFactors = F)
sites <- c("Beaufort", "Wanchese", "VirginiaBeach")
for (loc in sites)  {
m <- read.delim(paste0(loc, "_relationships_edited.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
m1 <- m
for (j in 1: nrow(m1))  {
b1 <- which(d$term == m$influences[j])
b2 <- which(d$term == m$isInfluenced[j])
if (length(b1) == 1) {  m1$influences[j]   <- d$allnewterms[b1]  }  else { print(paste(loc, "j=", j, m$influences[j])) }
if (length(b2) == 1) {  m1$isInfluenced[j] <- d$allnewterms[b2]  }  else { print(paste(loc, "j=", j, m$isInfluenced[j])) }
}
m1$rel[which(m1$rel==0)] <- NA
write.table(m1, file=paste0(loc, "_relationships_newterm.csv"), append=F, quote=F, row.names=F, col.names=T, sep=",")
}
loc <- "Beaufort"
j <- 6
b1 <- which(d$term == m$influences[j])
b2 <- which(d$term == m$isInfluenced[j])
b1
v2
b2
b1
b1
d$allnewterms[b1]
d$allnewterms[min(b1)]
rm(list=ls())
d <- read.table("all_terms_edited.csv", header=T, sep=",", stringsAsFactors = F)
sites <- c("Beaufort", "Wanchese", "VirginiaBeach")
for (loc in sites)  {
m <- read.delim(paste0(loc, "_relationships_edited.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
m1 <- m
for (j in 1: nrow(m1))  {
b1 <- which(d$term == m$influences[j])
b2 <- which(d$term == m$isInfluenced[j])
if (length(b1) >= 1) {  m1$influences[j]   <- d$allnewterms[min(b1)]  }  else { print(paste(loc, "j=", j, m$influences[j])) }
if (length(b2) >- 1) {  m1$isInfluenced[j] <- d$allnewterms[min(b2)]  }  else { print(paste(loc, "j=", j, m$isInfluenced[j])) }
}
m1$rel[which(m1$rel==0)] <- NA
write.table(m1, file=paste0(loc, "_relationships_newterm.csv"), append=F, quote=F, row.names=F, col.names=T, sep=",")
}
warnings()
rm(list=ls())
d <- read.table("all_terms_edited.csv", header=T, sep=",", stringsAsFactors = F)
sites <- c("Beaufort", "Wanchese", "VirginiaBeach")
for (loc in sites)  {
m <- read.delim(paste0(loc, "_relationships_edited.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
m1 <- m
for (j in 1: nrow(m1))  {
b1 <- which(d$term == m$influences[j])
b2 <- which(d$term == m$isInfluenced[j])
if (length(b1) >= 1) {  m1$influences[j]   <- d$allnewterms[min(b1)]  }  else { print(paste(loc, "j=", j, m$influences[j])) }
if (length(b2) >= 1) {  m1$isInfluenced[j] <- d$allnewterms[min(b2)]  }  else { print(paste(loc, "j=", j, m$isInfluenced[j])) }
}
m1$rel[which(m1$rel==0)] <- NA
write.table(m1, file=paste0(loc, "_relationships_newterm.csv"), append=F, quote=F, row.names=F, col.names=T, sep=",")
}
# Step 7. Specify positive and negaitve relationships
rm(list=ls())
d <- read.table("all_terms_edited.csv", header=T, sep=",", stringsAsFactors = F)
sites <- c("Beaufort", "Wanchese", "VirginiaBeach")
for (loc in sites)  {
m <- read.delim(paste0(loc, "_relationships_edited.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
m1 <- m
for (j in 1: nrow(m1))  {
b1 <- which(d$term == m$influences[j])
b2 <- which(d$term == m$isInfluenced[j])
if (length(b1) >= 1) {  m1$influences[j]   <- d$allnewterms[min(b1)]  }  else { print(paste(loc, "j=", j, m$influences[j])) }
if (length(b2) >= 1) {  m1$isInfluenced[j] <- d$allnewterms[min(b2)]  }  else { print(paste(loc, "j=", j, m$isInfluenced[j])) }
}
m1$rel[which(m1$rel==0)] <- NA
write.table(m1, file=paste0(loc, "_relationships_newterm.csv"), append=F, quote=F, row.names=F, col.names=T, sep=",")
}
#############################################################################
# Step 7. Specify positive and negaitve relationships
rm(list=ls())
d <- read.table("all_terms_edited.csv", header=T, sep=",", stringsAsFactors = F)
sites <- c("Beaufort", "Wanchese", "VirginiaBeach")
for (loc in sites)  {
m <- read.delim(paste0(loc, "_relationships_edited.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
m1 <- m
for (j in 1: nrow(m1))  {
b1 <- which(d$term == m$influences[j])
b2 <- which(d$term == m$isInfluenced[j])
if (length(b1) >= 1) {  m1$influences[j]   <- d$allnewterms[min(b1)]  }  else { print(paste(loc, "j=", j, m$influences[j])) }
if (length(b2) >= 1) {  m1$isInfluenced[j] <- d$allnewterms[min(b2)]  }  else { print(paste(loc, "j=", j, m$isInfluenced[j])) }
}
m1$rel[which(m1$rel==0)] <- NA
write.table(m1, file=paste0(loc, "_relationships_newterm.csv"), append=F, quote=F, row.names=F, col.names=T, sep=",")
}
#############################################################################
# Step 7. Specify positive and negaitve relationships
rm(list=ls())
d <- read.table("all_terms_edited.csv", header=T, sep=",", stringsAsFactors = F)
sites <- c("Beaufort", "Wanchese", "VirginiaBeach")
for (loc in sites)  {
m <- read.delim(paste0(loc, "_relationships_edited.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
m1 <- m
for (j in 1: nrow(m1))  {
b1 <- which(d$term == m$influences[j])
b2 <- which(d$term == m$isInfluenced[j])
if (length(b1) >= 1) {  m1$influences[j]   <- d$allnewterms[min(b1)]  }  else { print(paste(loc, "j=", j, m$influences[j])) }
if (length(b2) >= 1) {  m1$isInfluenced[j] <- d$allnewterms[min(b2)]  }  else { print(paste(loc, "j=", j, m$isInfluenced[j])) }
}
m1$rel[which(m1$rel==0)] <- NA
write.table(m1, file=paste0(loc, "_relationships_newterm.csv"), append=F, quote=F, row.names=F, col.names=T, sep=",")
}
rm(list=ls())
sites <- c("Beaufort", "Wanchese", "VirginiaBeach")
loc <- sites[1]  # for (loc in sites)  {
m <- read.delim(paste0(loc, "_relationships_edited.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
m <- read.delim(paste0(loc, "_relationships_newterm_scored.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
m
head(m)
lis <- unique(c(m$influences, m$isInfluenced))
lis
length(lis)
matrix(data=NA, nrow=length(lis), ncol=length(lis))
mat <- matrix(data=NA, nrow=length(lis), ncol=length(lis))
matrix(data=NA, nrow=length(lis), ncol=length(lis))
mat
head(mat)
names(mat)
colnames(mat)
colnames(mat) <- lis
rownames(mat) <- lis
mat
lis <- unique(c(m$influences, m$isInfluenced))
mat <- matrix(data=NA, nrow=length(lis), ncol=length(lis))
colnames(mat) <- lis
rownames(mat) <- lis
rownames(mat) <- lis
mat
m
head(m)
which(rownames(mat) == m$influences[1])
which(colnames(mat) == m$influences[1])
which(rownames(mat) == m$influences[1])
which(colnames(mat) == m$isInfluenced[1])
mat[which(rownames(mat) == m$influences[1]), which(colnames(mat) == m$isInfluenced[1])]
which(colnames(mat) == m$influences[1])
mat[which(rownames(mat) == m$influences[1]), which(colnames(mat) == m$isInfluenced[1])]
mat[which(rownames(mat) == m$influences[1]), which(colnames(mat) == m$isInfluenced[1])] <- rel[i]
mat[which(rownames(mat) == m$influences[1]), which(colnames(mat) == m$isInfluenced[1])] <- m$rel[i]
for (i in 1:nrow(m)) {
mat[which(rownames(mat) == m$influences[1]), which(colnames(mat) == m$isInfluenced[1])] <- m$rel[i]
}
rm(list=ls())
for (i in 1:nrow(m)) {
mat[which(rownames(mat) == m$influences[1]), which(colnames(mat) == m$isInfluenced[1])] <- m$rel[i]
}
rm(list=ls())
sites <- c("Beaufort", "Wanchese", "VirginiaBeach")
loc <- sites[1]  # for (loc in sites)  {
m <- read.delim(paste0(loc, "_relationships_newterm_scored.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
lis <- unique(c(m$influences, m$isInfluenced))
mat <- matrix(data=NA, nrow=length(lis), ncol=length(lis))
colnames(mat) <- lis
rownames(mat) <- lis
for (i in 1:nrow(m)) {
mat[which(rownames(mat) == m$influences[1]), which(colnames(mat) == m$isInfluenced[1])] <- m$rel[i]
}
mat
head(mat)
head(m)
for (i in 1:nrow(m)) {
mat[which(rownames(mat) == m$influences[i]), which(colnames(mat) == m$isInfluenced[i])] <- m$rel[i]
}
head(mat)
mat
head(mat)
mat
head(mat)
dim(mat)
mat <- cbind(rownames(mat), mat)
mat
head(mat)
rm(list=ls())
sites <- c("Beaufort", "Wanchese", "VirginiaBeach")
loc <- sites[1]  # for (loc in sites)  {
m <- read.delim(paste0(loc, "_relationships_newterm_scored.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
lis <- unique(c(m$influences, m$isInfluenced))
mat <- matrix(data=NA, nrow=length(lis), ncol=length(lis))
colnames(mat) <- lis
rownames(mat) <- lis
for (i in 1:nrow(m)) {
mat[which(rownames(mat) == m$influences[i]), which(colnames(mat) == m$isInfluenced[i])] <- m$rel[i]
}
write.table(mat, file=paste0(loc, "revisedMat.csv"), append=F, quote=F, sep=",", row.names=T, col.names=T)
mat
mat
head(mat)
# Step 8. Convert back to matrix format
rm(list=ls())
sites <- c("Beaufort", "Wanchese", "VirginiaBeach")
for (loc in sites)  {
m <- read.delim(paste0(loc, "_relationships_newterm_scored.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
lis <- unique(c(m$influences, m$isInfluenced))
mat <- matrix(data=NA, nrow=length(lis), ncol=length(lis))
colnames(mat) <- lis
rownames(mat) <- lis
for (i in 1:nrow(m)) {
mat[which(rownames(mat) == m$influences[i]), which(colnames(mat) == m$isInfluenced[i])] <- m$rel[i]
}
write.table(mat, file=paste0(loc, "_revisedMat.csv"), append=F, quote=F, sep=",", row.names=T, col.names=T)
}
mat
mat <- matrix(data=0, nrow=length(lis), ncol=length(lis))
colnames(mat) <- lis
rownames(mat) <- lis
for (i in 1:nrow(m)) {
mat[which(rownames(mat) == m$influences[i]), which(colnames(mat) == m$isInfluenced[i])] <- m$rel[i]
}
mat
# Step 8. Convert back to matrix format
rm(list=ls())
sites <- c("Beaufort", "Wanchese", "VirginiaBeach")
for (loc in sites)  {
m <- read.delim(paste0(loc, "_relationships_newterm_scored.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
lis <- unique(c(m$influences, m$isInfluenced))
mat <- matrix(data=0, nrow=length(lis), ncol=length(lis))
colnames(mat) <- lis
rownames(mat) <- lis
for (i in 1:nrow(m)) {
mat[which(rownames(mat) == m$influences[i]), which(colnames(mat) == m$isInfluenced[i])] <- m$rel[i]
}
write.table(mat, file=paste0(loc, "_matrix_newterms.csv"), append=F, quote=F, sep=",", row.names=T, col.names=T)
}
m <- read.delim(paste0(loc, "_relationships_newterm_scored.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
lis <- unique(c(m$influences, m$isInfluenced))
mat <- matrix(data="0"", nrow=length(lis), ncol=length(lis))
colnames(mat) <- lis
rownames(mat) <- lis
for (i in 1:nrow(m)) {
mat[which(rownames(mat) == m$influences[i]), which(colnames(mat) == m$isInfluenced[i])] <- m$rel[i]
}
write.table(mat, file=paste0(loc, "_matrix_newterms.csv"), append=F, quote=F, sep=",", row.names=T, col.names=T)
}
#############################################################################
#######  code below doesn't work - Mental Modeler cannot read the .mmp  #########
#install.packages("stringr")
library("stringr")
setwd("C:/Users/mandy.karnauskas/Desktop/participatory_workshops/model_processing")
m <- read.delim("Beaufort.mmp", header=F)
m[] <- lapply(m, as.character)
d <- read.table("all_terms_edited.csv", header=T, sep=",")
d1 <- d[which(d$wkshp == "BFT"),]
lis <- grep("<name ><![CDATA", m[,], fixed=T)
for (i in lis)  {
k <- which(str_detect(m[i,], as.character(d1$term), negate = FALSE) == TRUE)
if (sum(str_detect(m[i,], as.character(d1$term), negate = FALSE)) == 1) {
m[i,] <- str_replace(m[i,], as.character(d1$term[k]), as.character(d1$allnewterms[k]))
}
}
output.file <- file("Beaufort_newTerms.mmp", "wb")
write.table(m, row.names = FALSE, col.names = FALSE, file = output.file,
quote = FALSE, append = TRUE, sep = "")
close(output.file)
########################### end of code that doesn't work ####################
m <- read.delim(paste0(loc, "_relationships_newterm_scored.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
lis <- unique(c(m$influences, m$isInfluenced))
mat <- matrix(data="0"", nrow=length(lis), ncol=length(lis))
colnames(mat) <- lis
rownames(mat) <- lis
for (i in 1:nrow(m)) {
mat[which(rownames(mat) == m$influences[i]), which(colnames(mat) == m$isInfluenced[i])] <- m$rel[i]
}
write.table(mat, file=paste0(loc, "_matrix_newterms.csv"), append=F, quote=F, sep=",", row.names=T, col.names=T)
}
#############################################################################
#######  code below doesn't work - Mental Modeler cannot read the .mmp  #########
#install.packages("stringr")
library("stringr")
setwd("C:/Users/mandy.karnauskas/Desktop/participatory_workshops/model_processing")
m <- read.delim("Beaufort.mmp", header=F)
m[] <- lapply(m, as.character)
d <- read.table("all_terms_edited.csv", header=T, sep=",")
d1 <- d[which(d$wkshp == "BFT"),]
lis <- grep("<name ><![CDATA", m[,], fixed=T)
for (i in lis)  {
k <- which(str_detect(m[i,], as.character(d1$term), negate = FALSE) == TRUE)
if (sum(str_detect(m[i,], as.character(d1$term), negate = FALSE)) == 1) {
m[i,] <- str_replace(m[i,], as.character(d1$term[k]), as.character(d1$allnewterms[k]))
}
}
output.file <- file("Beaufort_newTerms.mmp", "wb")
write.table(m, row.names = FALSE, col.names = FALSE, file = output.file,
quote = FALSE, append = TRUE, sep = "")
close(output.file)
########################### end of code that doesn't work ####################
sites <- c("Beaufort")
for (loc in sites)  {
m <- read.delim(paste0(loc, "_relationships_newterm_scored.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
lis <- unique(c(m$influences, m$isInfluenced))
mat <- matrix(data="", nrow=length(lis), ncol=length(lis))
colnames(mat) <- lis
rownames(mat) <- lis
for (i in 1:nrow(m)) {
mat[which(rownames(mat) == m$influences[i]), which(colnames(mat) == m$isInfluenced[i])] <- m$rel[i]
}
write.table(mat, file=paste0(loc, "_matrix_newterms.csv"), append=F, quote=F, sep=",", row.names=T, col.names=T)
}
sites <- c("Beaufort")
m <- read.delim(paste0(loc, "_relationships_newterm_scored.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
loc
lis <- unique(c(m$influences, m$isInfluenced))
lis
lis <- unique(c(m$influences, m$isInfluenced))
mat <- matrix(data="", nrow=length(lis), ncol=length(lis))
colnames(mat) <- lis
rownames(mat) <- lis
mat
for (loc in sites)  {
m <- read.delim(paste0(loc, "_relationships_newterm_scored.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
lis <- unique(c(m$influences, m$isInfluenced))
mat <- matrix(data="", nrow=length(lis), ncol=length(lis))
colnames(mat) <- lis
rownames(mat) <- lis
for (i in 1:nrow(m)) {
mat[which(rownames(mat) == m$influences[i]), which(colnames(mat) == m$isInfluenced[i])] <- m$rel[i]
}
write.table(mat, file=paste0(loc, "_matrix_newterms.csv"), append=F, quote=F, sep=",", row.names=T, col.names=T)
}
loc, "_matrix_newterms.csv"
paste0(loc, "_matrix_newterms.csv"
)
getwd()
m <- read.delim(paste0(loc, "_relationships_newterm_scored.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
lis <- unique(c(m$influences, m$isInfluenced))
mat <- matrix(data="", nrow=length(lis), ncol=length(lis))
colnames(mat) <- lis
rownames(mat) <- lis
mat
mat[1:5,1:5]
for (i in 1:nrow(m)) {
mat[which(rownames(mat) == m$influences[i]), which(colnames(mat) == m$isInfluenced[i])] <- m$rel[i]
}
mat[1:5,1:5]
which(rownames(mat) == m$influences[i])''
which(rownames(mat) == m$influences[i])
which(colnames(mat) == m$isInfluenced[i])
mat[42,30]
head(m)
lis
m <- read.delim(paste0(loc, "_relationships_newterm_scored.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
lis <- unique(c(m$influences, m$isInfluenced))
mat <- matrix(data="", nrow=length(lis), ncol=length(lis))
mat
for (i in 1:nrow(m)) {
mat[which(lis == m$influences[i]), which(lis == m$isInfluenced[i])] <- m$rel[i]
}
mat
write.table(mat, file=paste0(loc, "_matrix_newterms.csv"), append=F, quote=F, sep=",", row.names=lis, col.names=lis)
write.table(mat, file=paste0(loc, "_matrix_newterms.csv"), append=F, quote=F, sep=",", row.names=lis, col.names=lis)
mat
mat <- cbind(lis, mat)
mat
m <- read.delim(paste0(loc, "_relationships_newterm_scored.csv"), header=T, sep=",", stringsAsFactors = F)   # specify matrix
lis <- unique(c(m$influences, m$isInfluenced))
mat <- matrix(data="", nrow=length(lis), ncol=length(lis))
for (i in 1:nrow(m)) {
mat[which(lis == m$influences[i]), which(lis == m$isInfluenced[i])] <- m$rel[i]
}
mat <- cbind(lis, mat)
mat <- rbind(c("", lis), mat)
mat
head(mat)
write.table(mat, file=paste0(loc, "_matrix_newterms.csv"), append=F, quote=F, sep=",", row.names=F, col.names=F)
#############################################################################
# Step 2. Read file into R and sort matrix into list of relationships
rm(list=ls())
setwd("C:/Users/mandy.karnauskas/Desktop/participatory_workshops/model_processing")
sites <- c("Beaufort", "Wanchese", "VirginiaBeach")
for (loc in sites) {
m <- read.table(paste0(loc, "_matrix.csv"), header=T, sep=",", row.names=1, check.names=FALSE)   # specify matrix
d <- data.frame(matrix(, nrow=0, ncol=3))                                     # empty dataframe to be filled
for (i in 1: nrow(m)) {                                                       # parse out list of relationships
b <- which(!is.na(m[i,]))
d0 <- data.frame(cbind(rep(names(m[i]), length(b)), colnames(m)[b], as.numeric(m[i,b])))
d <- rbind(d, d0)  }
names(d) <- c("influences", "isInfluenced", "rel")
head(d)                                                                       # list of relationships
d$description <- ""                                                           # add other columns for next manual step
write.table(d, file=paste0(loc, "_relationships.csv"), append=F, quote=F, row.names=F, col.names=T, sep=",")
}
#####
rm(list=ls())
setwd("C:/Users/mandy.karnauskas/Desktop/participatory_workshops/model_processing")
sites <- c("Beaufort", "Wanchese", "VirginiaBeach")           # select workshop location
for (loc in sites) {
m <- read.delim(paste0(loc, "_relationships.csv"), header=T, sep=",")   # specify matrix
me <- read.delim(paste0(loc, "_relationships_edited.csv"), header=T, sep=",")   # specify matrix
dim(m)
dim(me)
me$ref <- paste0(me$influences, me$isInfluenced)
m$ref <- paste0(m$influences, m$isInfluenced)
m1 <- merge(m, me, by="ref", all.x=TRUE)
dim(m1)
m1 <- m1[c(2, 3, 4, 9)]
names(m1) <- c("influences", "isInfluenced", "rel", "description")
write.table(m1, file=paste0(loc, "_relationships_edited.csv"), append=F, quote=F, row.names=F, col.names=T, sep=",")
}
rm(list=ls())
setwd("C:/Users/mandy.karnauskas/Desktop/participatory_workshops/model_processing")
sites <- c("Beaufort", "Wanchese", "VirginiaBeach")
for (loc in sites) {
m <- read.table(paste0(loc, "_matrix.csv"), header=T, sep=",", row.names=1, check.names=FALSE)   # specify matrix
d <- data.frame(matrix(, nrow=0, ncol=3))                                     # empty dataframe to be filled
for (i in 1: nrow(m)) {                                                       # parse out list of relationships
b <- which(!is.na(m[i,]))
d0 <- data.frame(cbind(rep(names(m[i]), length(b)), colnames(m)[b], as.numeric(m[i,b])))
d <- rbind(d, d0)  }
names(d) <- c("influences", "isInfluenced", "rel")
head(d)                                                                       # list of relationships
d$description <- ""                                                           # add other columns for next manual step
write.table(d, file=paste0(loc, "_relationships.csv"), append=F, quote=F, row.names=F, col.names=T, sep=",")
}
###
rm(list=ls())
setwd("C:/Users/mandy.karnauskas/Desktop/participatory_workshops/model_processing")
sites <- c("Beaufort")
for (loc in sites) {
m <- read.delim(paste0(loc, "_relationships.csv"), header=T, sep=",")   # specify matrix
me <- read.delim(paste0(loc, "_relationships_edited.csv"), header=T, sep=",")   # specify matrix
dim(m)
dim(me)
me$ref <- paste0(me$influences, me$isInfluenced)
m$ref <- paste0(m$influences, m$isInfluenced)
m1 <- merge(m, me, by="ref", all.x=TRUE)
dim(m1)
m1 <- m1[c(2, 3, 4, 9)]
names(m1) <- c("influences", "isInfluenced", "rel", "description")
write.table(m1, file=paste0(loc, "_relationships_edited.csv"), append=F, quote=F, row.names=F, col.names=T, sep=",")
}
rm(list=ls())
setwd("C:/Users/mandy.karnauskas/Desktop/participatory_workshops/model_processing")
w1 <- read.table("Beaufort_matrix.csv", header=T, sep=",", row.names=1)       # specify matrix
w2 <- read.table("Wanchese_matrix.csv", header=T, sep=",", row.names=1)       # specify matrix
w3 <- read.table("VirginiaBeach_matrix.csv", header=T, sep=",", row.names=1)       # specify matrix
d <- data.frame(rbind(cbind(rownames(w1), "BFT"), cbind(rownames(w2), "WAN"), cbind(rownames(w3), "VB")))
names(d) <- c("term", "wkshp")
d$newterm <- ""
d$notes <- ""
write.table(d, file="all_terms.csv", append=F, quote=F, row.names=F, col.names=T, sep=",")
te
t0
te <- read.table("all_terms_edited.csv", header=T, sep=",", stringsAsFactors = F)
t0 <- read.table("all_terms.csv", header=T, sep=",", stringsAsFactors = F)
head(te)
head(t0)
dim(te)
dim(t0)
t1 <- merge(t0, te, by="term", all.x=TRUE)
dim(t1)
t1
t1
head(t1)
head(t0)
head(te)
head(te)
head(t0)
dim(te)
dim(t0)
t1 <- merge(te, t0, by="term", all.y=TRUE)
dim(t1)
head(t1)
head(te)
t1$newterm.y
t1$notes.y
table(t1$wkshp.x, t1$wkshp.y)
t1$wkshp.x==t1$wkshp.y
which(t1$wkshp.x==t1$wkshp.y)
which(t1$wkshp.x!=t1$wkshp.y)
t1[which(t1$wkshp.x!=t1$wkshp.y),]
head(t0)
t0 <- read.table("all_terms.csv", header=T, sep=",", stringsAsFactors = F)
te <- read.table("all_terms_edited.csv", header=T, sep=",", stringsAsFactors = F)
dim(te)
dim(t0)
t1 <- merge(te, t0, by="term", all.y=TRUE)
dim(t1)
head(t1)
t1 <- t1[1:5]
t1
head(t1)
head(t0)
head(te)
names(t1) <- names(te)
head(te)
head(t1)
write.table(t1, file=paste0(loc, "all_terms_edited.csv"), append=F, quote=F, row.names=F, col.names=T, sep=",")
write.table(t1, file="all_terms_edited.csv", append=F, quote=F, row.names=F, col.names=T, sep=",")
